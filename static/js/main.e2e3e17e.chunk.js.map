{"version":3,"sources":["components/TodoList.js","components/AddTodo.js","App.js","index.js"],"names":["TodoList","todos","deleteTodo","length","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","map","todo","body","icon","isRound","onClick","id","colorScheme","mg","AddTodo","addTodo","toast","useToast","useState","content","setContent","onSubmit","e","preventDefault","title","status","duration","isClosable","nanoid","mt","variant","type","placeholder","value","onChange","target","px","App","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","useColorMode","colorMode","toggleColorMode","mb","fontWeight","size","bgGradient","bgClip","newTodos","filter","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"kPAqCeA,MAhCf,YAAwC,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,WAEtB,OAAID,EAAME,OASN,cAAC,IAAD,CACIC,QAAS,cAAC,IAAD,IACTC,YAAY,WACZC,YAAY,MACZC,EAAE,IACFC,aAAa,KACbC,EAAE,OACFC,KAAM,CAACC,KAAK,OAAQC,GAAG,OAAQC,GAAG,OAAQC,GAAG,QAC7CC,WAAY,UARhB,SAUKd,EAAMe,KAAI,SAAAC,GAAI,OACX,eAAC,IAAD,WACI,cAAC,IAAD,UAAOA,EAAKC,OACZ,cAAC,IAAD,IACA,cAAC,IAAD,CAAYC,KAAM,cAAE,IAAF,IAAcC,QAAQ,OAAOC,QAAS,kBAAMnB,EAAWe,EAAKK,SAHrEL,EAAKK,SAlBtB,cAAC,IAAD,CAAOC,YAAY,QAAQhB,EAAE,IAAIiB,GAAG,IAAIhB,aAAc,KAAtD,oC,kCC+BGiB,MAnCf,YAA6B,IAAXC,EAAU,EAAVA,QACRC,EAAQC,cACd,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OACI,sBAAMC,SAnBW,SAAAC,GACjBA,EAAEC,iBACEJ,GACAH,EAAM,CACFQ,MAAO,aACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGpB,IAAMrB,EAAO,CACTK,GAAIiB,cACJrB,KAAMY,GAGVJ,EAAQT,GACRc,EAAW,KAGX,SACI,eAAC,IAAD,CAAQS,GAAG,IAAX,UACI,cAAC,IAAD,CAAOC,QAAQ,SAASC,KAAK,OAAOC,YAAY,WAChDC,MAAOd,EACPe,SAAU,SAACZ,GAAD,OAAOF,EAAWE,EAAEa,OAAOF,UACrC,cAAC,IAAD,IACA,cAAC,IAAD,CAAQF,KAAK,SAASnB,YAAY,OAAOwB,GAAG,IAA5C,4B,iBCeDC,MAxCf,WAEA,MAA0BnB,oBACxB,kBAAOoB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MADtD,mBAAOnD,EAAP,KAAcoD,EAAd,KAIAC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUvD,MAC5C,CAACA,IAEJ,IAaA,EAAsCwD,cAA9BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAEjB,OACE,eAAC,IAAD,CAAQpD,EAAG,EAAX,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASqD,GAAG,IAAIC,WAAW,YAAYC,KAAK,MAAMC,WAAW,2CAA2CC,OAAO,OAA/G,8BAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAY7C,KAAoB,UAAduC,EAAwB,cAAC,IAAD,IAAY,cAAC,IAAD,IAAYtC,QAAQ,OAAO0C,KAAK,KAAKzC,QAASsC,OAEtG,cAAC,EAAD,CAAU1D,MAAOA,EAAOC,WApBX,SAAAoB,GACjB,IAAM2C,EAAWhE,EAAMiE,QAAO,SAAAjD,GAC5B,OACEA,EAAKK,KAAOA,KAGhB+B,EAASY,MAeL,cAAC,EAAD,CAASvC,QAzBC,SAAAT,GACdoC,EAAS,GAAD,mBAAKpD,GAAL,CAAYgB,Y,kBCftBkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBC,iBAAiB,UAClC,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.e2e3e17e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { VStack, HStack, Text, IconButton, StackDivider, Spacer, Badge} from \"@chakra-ui/react\";\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nfunction TodoList({todos, deleteTodo}) {\r\n\r\n    if(!todos.length) {\r\n        return(\r\n            <Badge colorScheme='green' p='4' mg='4' borderRadius ='lg'>\r\n                No Todos for Today !!\r\n            </Badge>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <VStack \r\n            divider={<StackDivider />} \r\n            borderColor='gray.200'\r\n            borderWidth='1px'\r\n            p='4'\r\n            borderRadius='lg'\r\n            w='100%'\r\n            maxW={{base:'90vw', sm:'80vw', lg:'50vw', xl:'40vw'}}\r\n            alignItems= 'stretch'\r\n            >\r\n            {todos.map(todo => (\r\n                <HStack key={todo.id}>\r\n                    <Text>{todo.body}</Text>\r\n                    <Spacer />\r\n                    <IconButton icon={< FaTrash />} isRound='true' onClick={() => deleteTodo(todo.id)}/>\r\n                </HStack>\r\n            ))}\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React, {useState} from 'react'\r\n\r\nimport { HStack, Spacer, Button, Input, useToast} from \"@chakra-ui/react\";\r\nimport {nanoid} from 'nanoid'\r\n\r\nfunction AddTodo({addTodo}) {\r\n    const toast = useToast()\r\n    const [content, setContent] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(!content){\r\n            toast({\r\n                title: 'No Content',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true\r\n            })\r\n        }\r\n        const todo = {\r\n            id: nanoid(),\r\n            body: content\r\n        }\r\n\r\n        addTodo(todo)\r\n        setContent('')\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <HStack mt='4'>\r\n                <Input variant='filled' type='text' placeholder='Add Task' \r\n                value={content} \r\n                onChange={(e) => setContent(e.target.value)}/>\r\n                <Spacer />\r\n                <Button type='submit' colorScheme='pink' px='8'>Add Todo</Button>\r\n            </HStack>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import {useState, useEffect} from 'react'\n\nimport TodoList from './components/TodoList'\nimport AddTodo from './components/AddTodo'\n\nimport { Heading } from '@chakra-ui/react'\nimport { VStack, HStack, IconButton, Spacer, useColorMode } from \"@chakra-ui/react\"\nimport { FaSun, FaMoon } from 'react-icons/fa'\n\nfunction App() {\n\nconst [todos, setTodos] = useState(\n  () => (JSON.parse(localStorage.getItem('todos')) || [])\n)\n\nuseEffect(() => {\n  localStorage.setItem('todos', JSON.stringify(todos))\n}, [todos])\n\nconst addTodo = todo => {\n  setTodos([...todos, todo])  \n}\n\nconst deleteTodo = id => {\n  const newTodos = todos.filter(todo => {\n    return (\n      todo.id !== id\n    )\n  })\n  setTodos(newTodos)\n}\n\nconst { colorMode, toggleColorMode} = useColorMode()\n\n  return (\n    <VStack p={4}>\n      <HStack>\n        <Heading mb='8' fontWeight='extrabold' size='2xl' bgGradient='linear(to-r, red.500, red.300, pink.500)' bgClip='text'>\n          Todo Application\n        </Heading>\n        <Spacer />\n        <IconButton icon={colorMode === 'light' ? <FaSun /> : <FaMoon />} isRound='true' size='lg' onClick={toggleColorMode} />\n      </HStack>\n      <TodoList todos={todos} deleteTodo={deleteTodo} />\n      <AddTodo addTodo={addTodo} />\n    </VStack>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ChakraProvider, ColorModeScript} from '@chakra-ui/react';\n \nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode='light' />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}